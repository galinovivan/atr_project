!function(t){t(document).ready(function(){t("#centerSlider").slick({centerPadding:"0px",centerMode:!0,slidesToShow:5,prevArrow:'<div class="arrow left"><i class="social_arrow social_arrow-arrow_left"></i></div>',nextArrow:'<div class="arrow right"><i class="social_arrow social_arrow-arrow_right"></i></div>'})})}(jQuery),function(t){t(document).ready(function(){t("#contactForm").submit(function(e){e.preventDefault();var n=t(this).serialize();n.action;t.ajax({type:"POST",url:window.wp_data.ajax_url,data:n,success:function(){t("#contactModal").modal("show")}})})})}(jQuery),function(t){t(document).ready(function(){var e=document.documentElement.lang;if("ru-RU"==e)var n="E-mail",o="Пароль",i="Повторите пароль";else if("en-US"==e){var n="E-mail",o="Password",i="Repeat password";t("#pass1").attr("placeholder",o),t("#last_name").attr("placeholder","Name")}var a=t("#wpuf-user_login"),r=t("#wpuf-user_pass"),s=t("#pass2");if(a.attr("placeholder",n),r.attr("placeholder",o),s.attr("placeholder",i),"ru-RU"==e)var c="Загрузить превью в jpg",l="Загрузить работу в pdf";else if("en-US"==e)var c="Upload the preview in .jpg",l="Upload the project in .pdf";var u=t("#wpuf-___________________pdf-pickfiles"),d=t("#post-68 > div > form > ul > li.wpuf-submit"),f="<span>Нажимая на кнопку отправить, я подтверждаю свою дееспособность и даю согласие на обработку персональных данных.</span>",p="<span>Нажимая на кнопку регистрация, я подтверждаю свою дееспособность и даю согласие на обработку персональных данных.</span>",m=t("#registrationModal > div > div > div.modal-body > div.registration.auth_form > div.reg_form > form > ul > li.wpuf-submit");"en-US"==e&&(p="<span>Pressing JOIN one confirms their capacity and agrees to handling of their personal data.</span>",f="<span>Pressing SEND one confirms their capacity and agrees to handling of their personal data.</span>"),m.prepend(p),d.prepend(f),u.text(l),t("#wpuf-featured_image-pickfiles").text(c)});var e=t(".wpuf_category_select_353_352 select"),n=document.documentElement.lang;if("ru-RU"==n)var o="Категория";else if("en-US"==n)var o="Type of parficipant";e=e.children(":first"),e.text(o)}(jQuery),function(t){t(document).ready(function(){currentLang=document.documentElement.lang;var e={};e.finalist="Finalists 2016",e.students="Students",e.graduate="Graduates",e.single="Single",e.multiple="Group",e.interior="Interior of apartment",e.pavilon="Pavilion / arbor",e.busStation="Bus station",e.cityOnTheWater="Sity on the Water",e.nomination="Category",e.numbersOfPartners="Number of partners";var n={};if(n.name="Full name",n.city="Region/State",n.phoneNumber="Phone Number",n.univer="Institution",n.spec="Specialty",n.Year="Year of graduate",n.teamLead="Mentor",n.projectName="Project Name",n.projectDesc="Project description",n.submit="Send proect","en-US"==currentLang){t(".wpuf_category_select_353_352 option:nth-of-type(2)").text(e.finalist),t(".wpuf_category_select_353_352 option:nth-of-type(3)").text(e.students),t(".wpuf_category_select_353_352 option:nth-of-type(4)").text(e.graduate),t("select.wpuf__352 option:first-of-type").text(e.numbersOfPartners),t("select.wpuf__352 option:nth-of-type(2)").text(e.single),t("select.wpuf__352 option:nth-of-type(3)").text(e.multiple),t("select.wpuf_nomination_352 option:first-of-type").text(e.nomination),t("select.wpuf_nomination_352 option:nth-of-type(2)").text(e.interior),t("select.wpuf_nomination_352 option:nth-of-type(3)").text(e.pavilon),t("select.wpuf_nomination_352 option:nth-of-type(4)").text(e.busStation),t("select.wpuf_nomination_352 option:nth-of-type(5)").text(e.cityOnTheWater);var o=t(".wpuf-form-add");t("#year").attr("placeholder",n.Year),o.find("#post_title").attr("placeholder",n.name),o.find("#city").attr("placeholder",n.city),o.find("#phone_number").attr("placeholder",n.phoneNumber),o.find("#univer").attr("placeholder",n.univer),o.find("#spec").attr("placeholder",n.spec),o.find("#team_lead").attr("placeholder",n.teamLead),o.find("#project_name").attr("placeholder",n.projectName),o.find("#project_desc").attr("placeholder",n.projectDesc),o.find('input[type="submit"]').val(n.submit),t("#registrationModal").find('input[type="submit"]').first().val("Join"),console.log(t("#registrationModal").find('input[type="submit"]').first().val())}})}(jQuery),function(t){t(document).ready(function(){new e(t("#dateLineContainer")).init()});var e=function(e){this.container=e,this.line=e.find(".date_line"),this.dateStart=Date.parse(e.attr("data-datestart")),this.dateEnd=Date.parse(e.attr("data-dateend")),this.currentDate=Date.now(),this.mobileParentHeight=276,this.mobileLine=t(".date_line_mobile"),this.mobileWidth="767"};e.prototype.init=function(){return this.isMobile()?(this.setMobileHeight(),!0):(this.setWidth(),!0)},e.prototype.getDateDelta=function(){var t=this.dateStart,e=this.dateEnd,n=this.currentDate,o=e-t,i=n-t,a=100*i/o;return console.log(a),a},e.prototype.isMobile=function(){return t(window).width()<this.mobileWidth},e.prototype.setWidth=function(){var t=this.calculateWidth();this.line.css("width",t)},e.prototype.calculateWidth=function(){return this.getDateDelta()+"%"},e.prototype.setMobileHeight=function(){var t=this.calculateMobileHeight();console.log(t),this.mobileLine.css("height",t)},e.prototype.calculateMobileHeight=function(){var t=this.getDateDelta(),e=this.mobileParentHeight;return Math.floor(e*(t/100))+"px"}}(jQuery),function(t){t(document).ready(function(){var e=t(".filter_field"),n=t(".gallery_list");e.click(function(e){e.preventDefault();var o=t(this).attr("data-filter"),i=t(this).attr("data-terms"),a={action:"myfilter",filter_nomination_query:o,terms:i};t.ajax({url:window.wp_data.ajax_url,data:a,type:"POST",beforeSend:function(t){n.find(".sort_preloader").show()},success:function(t){n.find(".sort_preloader").hide(),n.html(t)}})})})}(jQuery),function(t){t(document).ready(function(){var e=t("#topHelper"),n=e.find(".helper_close");t("#helperToggle").on("click",function(t){e.slideToggle("fast"),t.preventDefault()}),n.on("click",function(t){e.slideToggle("fast"),t.preventDefault()})})}(jQuery),function(t){t(document).ready(function(){function e(e){var o=e.attr("href"),i=t(o),a=n(i);t("body").animate({scrollTop:a},800),t("#mainNav").slideToggle()}function n(t){var e=t.offset().top-325;return console.log(e),e}!function(){var n=t(".scroll_link");n.on("click",function(t){t.preventDefault(),e(n)})}()})}(jQuery),function(t){function e(t,e){return"error"==e?'<div class="alert alert-error"><p class="black">'+t+"</p></div>":'<div class="alert alert-success"><p class="black">'+t+"</p></div>"}var n=!1;t(document).ready(function(){function o(t,e,o){if(n)return e.find("response").html("<p>Необходимо дождаться ответа предыдущего запроса</p>"),!1;e.find('input[type="submit"]').attr("disabled","disabled").val("Подождите"),e.find(".response").html(""),n=!0}function i(o,i,a,r){if(console.log(arguments),o.success){var s=t("#stepSuccess");if(null!=(s=t(s.val())))t("#registrationModal").modal("hide"),s.modal("show");else{var c=e(o.data.message,"success");r.find('input[type="submit"]').prop("disabled",!1).val("Готово")}}else{var c=e(o.data.message,"error");r.find('input[type="submit"]').prop("disabled",!1).val("Отправить")}r.find(".response").html(c),o.data.redirect&&(window.location.href=o.data.redirect),n=!1}var a=t(".userform"),r={dataType:"json",beforeSubmit:o,success:i,error:function(t){console.log(arguments)},url:ajax_var.url};a.ajaxForm(r),t(".logout").click(function(e){if(e.preventDefault(),n)return!1;var o=t(this);t.ajax({type:"POST",url:"admin-ajax.php",dataType:"json",data:"action=logout_me&nonce="+t(this).data("nonce"),beforeSend:function(t){o.text("Подождите"),n=!0},success:function(t){t.success?(o.text("Выходим"),window.location.reload(!0)):alert(t.data.message)},error:function(t,e,n){console.log(arguments)},complete:function(t){n=!1}})})})}(jQuery),function(t){t(document).ready(function(){t("#successSendProject");t(".wpuf-form-add").submit(function(t){var e=window.sessionStorage;e&&e.setItem("project-publish-status","create")}),console.log("status:"+window.sessionStorage.getItem("project-publish-status"))})}(jQuery),function(t){function e(t,e){e.on("click",function(){t.slideToggle()}),t.find(".nav_close").on("click",function(e){t.slideToggle(),e.preventDefault()})}t(document).ready(function(){e(t("#mainNav"),t("#navToggle"))})}(jQuery),function(t){function e(){var e=t("#pagePreloader");e.find(".spinner").fadeOut(),e.delay(350).fadeOut("slow")}t(window).on("load",function(){e()})}(jQuery),function(t){t(document).ready(function(){function e(){n.scrollTop()>400?o.show("fast"):o.hide("fast")}var n=t("body"),o=t(".top_link");o.on("click",function(t){t.preventDefault(),n.animate({scrollTop:0},800)}),window.onscroll=function(){e()}})}(jQuery),function(t){t(document).ready(function(){var e=t(".sort_field"),n=t(".gallery_list");e.click(function(e){e.preventDefault();var o=t(this).attr("data-sort"),i=t(this).attr("data-terms"),a={action:"myfilter",sort_type:o,terms:i};t.ajax({url:window.wp_data.ajax_url,data:a,type:"POST",beforeSend:function(t){n.find(".sort_preloader").show()},success:function(t){n.find(".sort_preloader").hide(),n.html(t)}})})})}(jQuery),function(t){t(document).ready(function(){var n=t("#subscribleHelper");if(document.cookie){e.getCookie("user_is_visited")||(e.setCookie("user_is_visited","true",{expires:604800}),n.show(),console.log(document.cookie)),console.log(document.cookie)}else n.show();t("#subscribleCloseButton").click(function(t){t.preventDefault(),n.slideToggle("fast")})});var e={setCookie:function(t,e,n){n=n||{};var o=n.expires;if("number"==typeof o&&o){var i=new Date;i.setTime(i.getTime()+1e3*o),o=n.expires=i}o&&o.toUTCString&&(n.expires=o.toUTCString()),e=encodeURIComponent(e);var a=t+"="+e;for(var r in n){a+="; "+r;var s=n[r];!0!==s&&(a+="="+s)}console.log(n.expires),document.cookie=a},getCookie:function(t){var e=document.cookie.match(new RegExp("(?:^|; )"+t.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return e?decodeURIComponent(e[1]):void 0},deleteCookie:function(t){this.setCookie(t,"",{expires:-1})}}}(jQuery),function(t){t(document).ready(function(){t('[data-toggle="tooltip"]').tooltip()})}(jQuery),function(t){t(document).ready(function(){t("#updateUserInfo").submit(function(e){e.preventDefault();var n=t("#userId").val(),o=t("#userUrl").val(),i=t("#userName").val(),a=t("#formAction").val(),r=t("#currentLang").val(),s={action:a,user_id:n,user_url:o,user_name:i,current_lang:r};t.post(ajax_var,s,function(e){var n=t("#userMessages");n.text(e),n.slideToggle()})})})}(jQuery),function(t){t(document).ready(function(){function e(t){yaCounter44245474.reachGoal(t,function(){console.log("Send event data to "+t)})}t("#topActionForUnloggined").on("click",function(t){e("topHelperHereButton")}),t(".reg_form").find("form").submit(function(){e("registrationForm")}),t("#buttonLearnMore").click(function(){e("buttonLearnMore")}),t("#buttonRegistrationOnButtom").click(function(){e("bottomRegistration")}),t(".wpcf7-form").click(function(){e("bottomContactForm")}),t("#buttonHouse").click(function(){e("buttonHouse")}),t("#ButtonCityOntheWater").click(function(){e("cityOnTheWaterNomination")}),t("#buttonAppartaments").click(function(){e("buttonApartamentsNomination")}),t("#buttonBusStation").click(function(){e("buttonBusStationNomination")})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
